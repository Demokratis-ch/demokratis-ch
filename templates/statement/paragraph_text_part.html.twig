{% set hasChosen = paragraphContainer.chosen|default(null) is not null %}
{% set hasModifications = paragraphContainer.chosen|default(null) is not null or paragraphContainer.modifications|length > 0 %}
{% set modificationsCount = (paragraphContainer.chosen|default(null) is not null ? 1 : 0) + paragraphContainer.modifications|length %}
{% set hasJustification = hasChosen and paragraphContainer.chosen.modification.justification|default(null) is not null %}
{% set hasPeers = hasChosen and paragraphContainer.chosen.peers|length > 0 %}

<div class="grid grid-cols-4 md:gap-x-4">

    {% if collapse == false %}
        <div class="col-span-4 mb-2 md:col-span-1 md:col-start-1 md:row-start-2 flex flex-row md:flex-col items-end">

            {% if app.user and is_granted('edit', statement) %}
                <a href="{{ path('app_paragraph_edit', { 'uuid': paragraphContainer.paragraph.uuid, 'statement': statement.id }) }}" class="opacity-60 hover:opacity-100 inline-block m-1 nowrap p-1.5 bg-gray-50 hover:bg-gray-100 border border-solid border-gray-300 text-gray-400 text-xs rounded-md">
                    Änderung vorschlagen <i class="fa-solid fa-edit ml-2"></i>
                </a>
                {% if paragraphContainer.chosen|default(null) is not null %}
                    <a href="{{ path('app_paragraph_remove_chosen', { 'uuid': paragraphContainer.chosen.modificationStatement.uuid }) }}" class="opacity-60 hover:opacity-100 inline-block m-1 nowrap p-1.5 bg-gray-50 hover:bg-gray-100 border border-solid border-gray-300 text-gray-400 text-xs rounded-md">
                        Original wiederherstellen <i class="fa-solid fa-undo ml-2"></i>
                    </a>
                {% endif %}
            {% endif %}

        </div>
    {% endif %}



    {# Display modifications #}
    <div class="scroll-mt-20 col-span-5 md:row-start-1 {% if collapse %}md:col-span-4{% else %}md:col-span-3 md:col-start-2{% endif %}">

        {% if hasModifications %}
            <div class="bg-gray-100 border border-gray-200 border-b-0 rounded-t mx-2 p-2">
                <div class="grid grid-cols-2 md:grid-cols-4">

                    {% set itemsCount = 0 %}

                    {# Currently chosen #}
                    {% if paragraphContainer.chosen is defined and paragraphContainer.chosen is not null %}
                        <div class="relative mx-1 p-2 border bg-white hover:bg-gray-50 rounded-lg border-2 border-blue-400 text-sm text-gray-500">
                            <a class="after:absolute after:inset-0" href="{{ path('app_paragraph_diff', { 'modification_uuid': paragraphContainer.chosen.modification.uuid, 'statement_uuid': statement.uuid }) }}">
                                {{ paragraphContainer.chosen.modification.createdBy }} <span class="text-xs text-gray-300">#{{ paragraphContainer.chosen.modification.uuid[:3] }}</span>
                                <p class="text-xs text-gray-300">{{ paragraphContainer.chosen.modification.createdAt|ago }}</p>
                            </a>
                        </div>
                        {% set itemsCount = itemsCount + 1 %}
                    {% endif %}

                    {# Proposed modifications #}
                    {% set proposed = paragraphContainer.modifications|slice(1, 4 - itemsCount) %}
                    {% set itemsCount = itemsCount + proposed|length %}
                    {% for n, modification in proposed %}
                        <div class="relative m-1 p-2 border bg-gray-50 hover:bg-white rounded-lg border-gray-200 text-sm text-gray-400 hover:text-gray-500">
                            <a class="after:absolute after:inset-0" href="{{ path('app_paragraph_diff', { 'modification_uuid': modification.uuid, 'statement_uuid': statement.uuid }) }}">
                                {{ modification.createdBy }} <span class="text-xs text-gray-300">#{{ modification.uuid[:3] }}</span>
                                <p class="text-xs text-gray-300">{{ modification.createdAt|ago }}</p>
                            </a>
                        </div>
                    {% endfor %}


                    {# Refused #}
                    {#
                    {% if paragraphContainer.refused|length > 0 %}
                        <div class="mt-2 text-xs text-gray-400">Abgelehnt:
                            {% for refused in paragraphContainer.refused %}
                                <a href="{{ path('app_paragraph_diff', { 'modification_uuid': refused.uuid, 'statement_uuid': statement.uuid  }) }}"
                                   class="">
                                    <span class="underline hover:no-underline">{{ refused.createdBy }} </span></a> <small>#{{ refused.uuid[:3] }}</small>{% if paragraphContainer.refused|length > 1 and loop.last == false %},{% endif %}
                            {% endfor %}
                        </div>
                    {% endif %}



                    #}


                    {# Foreign inspirations #}
                    {#
                    {% if paragraphContainer.foreign|length > 0 %}

                        <h2 class="inspirations mt-4 text-xs text-gray-400 font-medium">Inspiration aus anderen Stellungnahmen</h2>
                        {% for foreign in paragraphContainer.foreign %}
                            {% if is_granted('view', statement) %}

                                <div class="relative mt-1 px-4 py-2 border bg-gray-100 hover:bg-white rounded-lg text-sm text-gray-500">
                                    <a class="after:absolute after:inset-0" href="{{ path('app_paragraph_diff', { 'modification_uuid': foreign.uuid, 'statement_uuid': statement.uuid }) }}">
                                        {{ foreign.createdBy }} <small>{{ foreign.createdAt|ago }} <span class="text-gray-300">#{{ foreign.uuid[:3] }}</span></small>
                                    </a>
                                </div>
                            {% endif %}
                        {% endfor %}
                    {% endif %}
                    #}

                    {#
                    {% if paragraphContainer.former is defined and paragraphContainer.former is not null %}
                        {% if paragraphContainer.chosen.modification.paragraph.forceOriginal == true %}
                            <small>Previous chosen: <a
                                        href="{{ path('app_paragraph_diff', { 'uuid': paragraphContainer.chosen.modification.uuid  }) }}"
                                        class="underline hover:no-underline">#{{ paragraphContainer.chosen.modification.uuid[:8] }}</a></small>
                        {% endif %}

                        {% if paragraphContainer.former|length > 0 %}
                            <small>Former:</small>
                            {% for former in paragraphContainer.former %}
                                <small><a href="{{ path('app_paragraph_diff', { 'uuid': former.modification.uuid  }) }}"
                                          class="underline hover:no-underline">#{{ former.modification.uuid[:8] }}</a>{% if paragraphContainer.former|length > 1 and loop.last == false %},{% endif %}
                                </small>
                            {% endfor %}
                        {% endif %}
                    {% endif %}
                    #}




                </div>

                {% if itemsCount >= 4 %}
                <div class="">
                    {# todo: link to the chosen or first modification #}
                    <a href="#" class="mt-2 ml-2 underline hover:no-underline text-xs text-gray-400">
                        Alle Änderungsvorschläge ansehen ({{ modificationsCount }}) <i class="fas fa-caret-right"></i>
                    </a>
                </div>
                {% endif %}

            </div>
        {% endif %}
    </div>

    {# Display paragraph #}
    <div class="paragraph z-10 scroll-mt-20 col-span-5 md:row-start-2 {% if collapse %}md:col-span-4{% else %}md:col-span-3 md:col-start-2{% endif %}">

        {% if paragraphContainer.chosen|default(null) is not null %}
            <div class="bg-white shadow border">
                <p class="p-4 text-sm md:text-md text-gray-600 border-l-8 border-blue-300">
                    {% for diff in paragraphContainer.chosen.diff %}
                        <span class="{% if diff[0] == -1 %}
                                                            bg-red-100
                                                            line-through
                                                            text-red-800
                                                        {% elseif diff[0] == 1 %}
                                                            bg-green-100
                                                            text-green-800
                                                        {% endif %}">
                                                        {{ diff[1]|nl2br }}
                                                    </span>
                    {% endfor %}
                </p>
            </div>
        {% else %}
            <div class="bg-white shadow border">
                <p class="p-4 text-sm md:text-md text-gray-600 border-l-8 border-gray-300">
                    {{ paragraphContainer.paragraph.text|nl2br }}
                </p>
            </div>
        {% endif %}

    </div>



        <div class="scroll-mt-20 col-span-5 md:row-start-3 {% if collapse %}md:col-span-4{% else %}md:col-span-3 md:col-start-2{% endif %}">

            {% if hasJustification or hasPeers %}
                {# display justification #}
                <div class="bg-gray-100 border border-gray-200 border-t-0 rounded-b mx-2 p-2 text-gray-500 text-sm">
                    {% if hasJustification %}
                        <div>
                            {{ paragraphContainer.chosen.modification.justification }}
                        </div>
                    {% endif %}
                </div>

                    {% if hasJustification %}
                        <div class="text-xs text-gray-400 mt-3">
                            Dieser Vorschlag ist auch Teil folgender Stellungnahmen:
                            {% for peer in paragraphContainer.chosen.peers %}
                                {% if peer.statement != statement %}
                                    <a href="{{ path('app_statement_show', { 'uuid': peer.statement.uuid }) }}" target="_blank"
                                       class="related-statement underline hover:no-underline">{{ peer.statement }}</a>
                                {% endif %}
                            {% endfor %}
                        </div>
                    {% endif %}

            {% endif %}

        </div>


</div>